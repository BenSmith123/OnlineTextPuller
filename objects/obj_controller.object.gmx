<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// cancel the update (timed out)
show_message("Been 10 sec and still no file,#restarting")

alarm[0] = 30

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// restart the game

game_restart()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var i_d = ds_map_find_value(async_load, "id");
if i_d == input
{
    if ds_map_find_value(async_load, "status")
    {
        if ds_map_find_value(async_load, "result") != ""
        {
            global.updater_url = ds_map_find_value(async_load, "result");
            message_display("input: " + global.updater_url)
            message_display("-- Ready to read file! &lt;F2&gt;")
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// handle the file using a ds_map

steps_repeated += 1

if ds_map_find_value(async_load, "id") == file
   {
       var status = ds_map_find_value(async_load, "status");
       if status == 0
       {
            message_display("---- file found ----")
            
            // file info, delete if you want :)
            message_display("steps repeated: " +string(steps_repeated))
            temp = ds_map_find_value(async_load, "sizeDownloaded");
            message_display("size downloaded: " + string(temp))
            
            if file_exists(working_directory + "save.txt") 
            {
                 show_message("File has been downloaded!")
                 
                 ini_open(working_directory + "save.txt")
            
                 // double checking the file is not empty
                 info = ini_read_string("UPDATE","message","")
                 
                 // check if the ini loaded is not the default ^^
                 if (info = "") {message_display("download / file read failed.")} // if failed, most likely a url problem
                 else
                 {
                    // successful!
                    message_display("-- FILE DOWNLOAD AND READ WAS SUCCESSFUL!!")
                    process_message() // file download is successful, now get the info from it and handle how it should be used
                 }

                 instance_destroy()
                 
                 // use this to download new files from a zip and get extra game content
                 /*************
                 var path = ds_map_find_value(async_load, "result");
                 var files = zip_unzip(path, "/NewContent/");
                 if files &gt; 0
                 {
                     global.ExtraContent = true;
                 }
                 *************/
 
            }

       } else if (status &gt; 0){
            message_display("downloading..")
       } else {
            message_display("Error: File NOT found!")
       }
   }
   
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// getting file from online

if not (os_is_network_connected()) {show_message("no internet connection,#Restarting game (3sec)") alarm[0] = 180} 

file = http_get_file(global.updater_url,working_directory + "save.txt")

message_display("http event called...")

alarm[2] = 600 // time out after 10 sec (CHANGE TO WHATEVER YOU WANT) - or delete :3

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// READ ME

/*****************************************
REQUIRES NO SERVER, NO WEBHOST, NO WEB PROGRAMMING

How to make your apps / games show a news message, information or update etc
This program:
    - hardcode a mediafire url (which can be edited) - global.updater_url 
    - each time the game is opened it will automatically download this file
    - the game will then display what you have put in your file :)
    
you can use this to post game updates, download new content, show messages etc

When using mediafire, do NOT change the file link 
(you can change or edit the file but make sure you keep the origonal link)
******************************************/


y2 = 40
steps_repeated = 0

message_display("How to update your game info / Mediafire file grabber")
message_display("") // creates a space
message_display("Press F1 to create a template ini in working directory")
message_display("Press F2 to fetch a file from mediafire and display it")
message_display("Press F3 to enter a url to be fetched")

message_display("&lt;UP&gt; to scroll up")
message_display("&lt;DOWN&gt; to scroll up")

message_display("Press F12 to restart")

// FORMAT THE MEDIAFIRE LINK TO THIS!! http://getlink.s2u.vn/redirect.php?link= your_link
// don't include file name ^^
global.updater_url = "http://getlink.s2u.vn/redirect.php?link=www.mediafire.com/?nv9yqtzptt0qyqy"


message_display("File URL = " + global.updater_url)

message_display("Working directory = " + working_directory)

alarm[1] = 60 // get file from global.updater_url

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="114">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// ask user to input a url

input = get_string_async("Input a url#(example format):","http://getlink.s2u.vn/redirect.php?link=www.mediafire.com/?nv9yqtzptt0qyqy")
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="113">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// call event_user0
event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// create the origonal ini file (for mediafire)

/*********************
use this as a template

this file will be saved in your working directory,
copy it and upload to mediafire to get information from
    (you can set any info you want!)

**********************/

message_display("creating ini file for mediafire")

// set the ini file variables
section = "UPDATE" // section name
message_id = 16543 // use to identify different messages
message_date = "3 May 2017" // "3/05/2017"
message_version = 2.1 // if message version is &gt; current version, display this
message = "there is a new update!#this is my message, read this blabla"
message_show_once = false // write code to handle this
message_url = "www.blabla.com"
message_has_url = true // write code to get the url if it has one (make it take you to the link)
message_appear_offline = false // message comes up even if offline


file = ini_open(working_directory + "TEMPLATE.ini") // if doesnt exist, automatically creates one

ini_write_real(section,"message_id",message_id)
ini_write_string(section,"message_date",message_date)
ini_write_real(section,"message_version",message_version)
ini_write_string(section,"message",message)
ini_write_real(section,"message_show_once",message_show_once)
ini_write_string(section,"message_url",message_url)
ini_write_real(section,"message_has_url",message_has_url)
ini_write_real(section,"message_appear_offline",message_appear_offline)

ini_close()


message_display("created file for mediafire in: " +temp_directory)


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
